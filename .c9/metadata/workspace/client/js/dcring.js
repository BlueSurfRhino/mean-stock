{"changed":true,"filter":false,"title":"dcring.js","tooltip":"/client/js/dcring.js","value":"// Events\nwindow.onload = function () { dcjsdemo(); }; //Render chart first thing\n\n// Globals\nvar dcReset;  //Connect to \"Reset\" button with onclick=\"dcReset()\" call\n\nfunction dcjsdemo() {\n\n    // Debug output routine from Data Visualization with D3.js Cookbook \n    function printFilter(filter) {\n        var f = eval(filter);\n        if (typeof (f.length) != \"undefined\") { } else { }\n        if (typeof (f.top) != \"undefined\") { f = f.top(Infinity); } else { }\n        if (typeof (f.dimension) != \"undefined\") { f = f.dimension(function (d) { return \"\"; }).top(Infinity); } else { }\n        console.log(filter + \"(\" + f.length + \") = \" + JSON.stringify(f).replace(\"[\", \"[\\n\\t\").replace(/}\\,/g, \"},\\n\\t\").replace(\"]\", \"\\n]\"));\n    }\n\n    // Make things pretty\n    var format = d3.format(\",\");\n    var timeFormat = d3.time.format.iso;\n\n    // load csv file that contains the data\n    // pathing asssume things are run from public\n    // for where files are located\n\n        // pretty colors, no thoughtful assignment\n        var chartcolors = d3.scale.category20b();\n\n\nvar w = 400;\nvar h = 400;\nvar r = h/2;\nvar color = d3.scale.category20c();\n\nvar data = [{\"label\":\"News\", \"value\":30}, \n\t\t          {\"label\":\"Chart\", \"value\":30}, \n\t\t          {\"label\":\"Events\", \"value\":30}];\n\n\nvar vis = d3.select('#navring').append(\"svg:svg\").data([data]).attr(\"width\", w).attr(\"height\", h).append(\"svg:g\").attr(\"transform\", \"translate(\" + r + \",\" + r + \")\");\nvar pie = d3.layout.pie().value(function(d){return d.value;});\n\n// declare an arc generator function\nvar arc = d3.svg.arc().outerRadius(r);\n\n\n// select paths, use arc generator to draw\nvar arcs = vis.selectAll(\"g.slice\").data(pie).enter().append(\"svg:g\").attr(\"class\", \"slice\");\narcs.append(\"svg:path\")\n    .attr(\"fill\", function(d, i){\n        return color(i);\n    })\n/*    .attr(\"d\", function (d) {\n        // log the result of the arc generator to show how cool it is :)\n        console.log(arc(d));\n        return arc(d);*/\n        .attr(\"d\", function(d, i, j) {\n    return arc.innerRadius(100+r*j).outerRadius(r*(j+1))(d);\n    });\n\n// add the text\narcs.append(\"svg:text\").attr(\"transform\", function(d){\n\t\t\td.innerRadius = 0;\n\t\t\td.outerRadius = r;\n    return \"translate(\" + arc.centroid(d) + \")\";}).attr(\"text-anchor\", \"middle\").text( function(d, i) {\n    return data[i].label;}\n\t\t);  \n\n\n\n}\n","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":66,"column":4},"end":{"row":66,"column":6}},"text":"  "}]}]]},"ace":{"folds":[],"scrolltop":637,"scrollleft":3,"selection":{"start":{"row":66,"column":6},"end":{"row":66,"column":6},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":27,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1415575501005}